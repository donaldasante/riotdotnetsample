# ASP.NET Core
# Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: 1.0$(Rev:.r)

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
    
steps:
# Use latest 3.x sdk
- task: UseDotNet@2
  displayName: 'Get latest dot net core 3.x'
  inputs:
    packageType: 'sdk'
    version: '3.x'

# Update assembly info with build number
- task: Assembly-Info-NetCore@2
  displayName: 'Update assembly info with generated build number'
  inputs:
    Path: '$(Build.SourcesDirectory)/src/Templating.RiotSPA'
    FileNames: '**/*.csproj'
    InsertAttributes: true
    FileEncoding: 'auto'
    WriteBOM: false
    VersionNumber: '$(Build.BuildNumber)'
    FileVersionNumber: '$(Build.BuildNumber)'
    PackageVersion: '$(Build.BuildNumber)'
    InformationalVersion: '$(Build.BuildNumber)'
    LogLevel: 'verbose'
    FailOnWarning: false
    DisableTelemetry: false

# dotnet restore
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: '$(Build.SourcesDirectory)/src/Templating.RiotSPA/Templating.RiotSPA.csproj'
    feedsToUse: 'select'
    
# create nuget package
- script: dotnet pack $(Build.SourcesDirectory)/src/Templating.RiotSPA/Templating.RiotSPA.csproj -o $(Build.ArtifactStagingDirectory) --no-build
  displayName: 'dotnet pack $(buildConfiguration)'

# Publish nuget package
- task: PublishBuildArtifacts@1
  displayName: 'Publish nuget package'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# Copy nuget package to feed
- task: DotNetCoreCLI@2
  displayName: Push Nuget Package
  inputs:
    command: custom
    custom: nuget
    arguments: >
      push $(Build.ArtifactStagingDirectory)/*.nupkg
      -s $(NuGetSourceServerUrl)
      -k $(NuGetSourceServerApiKey)